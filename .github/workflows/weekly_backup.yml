name: Weekly Backup Workflow

on:
  schedule:
    # Run at 01:00 UTC every Sunday
    - cron: '0 1 * * 0'
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  backup_database:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Setup Firebase credentials
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > firebase_credentials.json
      
      - name: Run database backup
        run: |
          python -m src.monitoring.backup --create-backup --type=full
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Upload backup as artifact
        uses: actions/upload-artifact@v3
        with:
          name: firebase-backup-${{ steps.date.outputs.date }}
          path: ./backups/
          retention-days: 30
      
      - name: Cleanup old backups
        run: |
          python -m src.monitoring.backup --cleanup-backups --keep-days=30
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}

  monitor_system_health:
    runs-on: ubuntu-latest
    needs: backup_database
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Setup Firebase credentials
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > firebase_credentials.json
      
      - name: Run comprehensive health check
        run: |
          python -m src.monitoring.health_checker --comprehensive
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FOOTBALL_API_KEY: ${{ secrets.FOOTBALL_API_KEY }}
          WP_URL: ${{ secrets.WP_URL }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
      
      - name: Generate health report
        run: |
          python -m src.monitoring.health_checker --generate-report
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Upload health report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: health-report-${{ steps.date.outputs.date }}
          path: ./reports/health_report_*.json
          retention-days: 30
