name: Daily Processing Workflow
on:
  schedule:
    - cron: '0 0,6,12,18 * * *'
  
  workflow_dispatch:
    inputs:
      run_all_steps:
        description: 'Run all workflow steps'
        required: false
        default: 'true'
      run_collection:
        description: 'Run only data collection'
        required: false
        default: 'false'
      run_generation:
        description: 'Run only content generation'
        required: false
        default: 'false'
      run_publishing:
        description: 'Run only article publishing'
        required: false
        default: 'false'

jobs:
  process_data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create necessary directories
        run: |
          mkdir -p /home/runner/football-predictions/creds/
          mkdir -p data/cache
          mkdir -p logs
      
      - name: Setup environment variables
        run: |
          echo "FIREBASE_DB_URL=${{ secrets.FIREBASE_DB_URL }}" >> $GITHUB_ENV
          echo "FOOTBALL_API_KEY=${{ secrets.FOOTBALL_API_KEY }}" >> $GITHUB_ENV
          echo "WP_URL=${{ secrets.WP_URL }}" >> $GITHUB_ENV
          echo "WP_USER=${{ secrets.WP_USER }}" >> $GITHUB_ENV
          echo "WP_APP_PASSWORD=${{ secrets.WP_APP_PASSWORD }}" >> $GITHUB_ENV
      
      - name: Setup Firebase credentials
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > firebase_credentials.json
          
          if python -c "import json; json.load(open('firebase_credentials.json'))"; then
            echo "✓ JSON valid"
          else
            echo "✗ Invalid JSON"
            head -n 20 firebase_credentials.json
            exit 1
          fi
          
          cp firebase_credentials.json /home/runner/football-predictions/creds/firebase-credentials.json
          cp firebase_credentials.json firebase-credentials.json
          
          echo "FIREBASE_CREDENTIALS=/home/runner/football-predictions/creds/firebase-credentials.json" >> $GITHUB_ENV
          echo "GOOGLE_APPLICATION_CREDENTIALS=/home/runner/football-predictions/creds/firebase-credentials.json" >> $GITHUB_ENV
      
      - name: Initialize Firebase app
        run: |
          cat > init_firebase.py << 'EOF'
          import os
          import firebase_admin
          from firebase_admin import credentials, db

          def initialize():
              try:
                  if len(firebase_admin._apps) > 0:
                      return True
                      
                  cred_path = None
                  for path in [
                      os.environ.get('FIREBASE_CREDENTIALS'),
                      'firebase_credentials.json',
                      '/home/runner/football-predictions/creds/firebase-credentials.json'
                  ]:
                      if path and os.path.exists(path):
                          cred_path = path
                          break
                  
                  if not cred_path:
                      return False
                  
                  cred = credentials.Certificate(cred_path)
                  firebase_admin.initialize_app(
                      cred,
                      {'databaseURL': os.environ.get('FIREBASE_DB_URL')}
                  )
                  db.reference('/').get()
                  return True
              except Exception:
                  return False

          if __name__ == "__main__":
              success = initialize()
              print("Initialization", "successful" if success else "failed")
              exit(0 if success else 1)
          EOF
          
          python init_firebase.py
      
      - name: Fix missing utils
        run: |
          # Aggiungi slugify se mancante
          if [ ! -f src/utils/text_utils.py ] || ! grep -q "def slugify" src/utils/text_utils.py; then
            cat >> src/utils/text_utils.py << 'EOF'
import re
import unicodedata

def slugify(text: str, allow_unicode: bool = False) -> str:
    """
    Convert text to URL-friendly slug
    """
    if allow_unicode:
        text = unicodedata.normalize('NFKC', text)
    else:
        text = unicodedata.normalize('NFKD', text).encode('ascii', 'ignore').decode('ascii')
    
    text = re.sub(r'[^\w\s-]', '', text.lower())
    return re.sub(r'[-\s]+', '-', text).strip('-_')
EOF
          fi

          # Verifica e aggiungi get_current_datetime
          if [ ! -f src/utils/time_utils.py ] || ! grep -q "def get_current_datetime" src/utils/time_utils.py; then
            cat >> src/utils/time_utils.py << 'EOF'
from datetime import datetime

def get_current_datetime(tz: str = "Europe/Rome") -> datetime:
    """Compatibility function"""
    return get_datetime_now(tz)
EOF
          fi
      
      - name: Collect match data
        if: ${{ github.event.inputs.run_all_steps == 'true' || github.event.inputs.run_collection == 'true' || github.event_name == 'schedule' }}
        run: python -m scripts.daily_coordinator --collect-data
        env:
          FOOTBALL_API_KEY: ${{ secrets.FOOTBALL_API_KEY }}
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FIREBASE_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
      
      - name: Generate content
        if: ${{ github.event.inputs.run_all_steps == 'true' || github.event.inputs.run_generation == 'true' || github.event_name == 'schedule' }}
        run: python -m scripts.daily_coordinator --generate-content
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FIREBASE_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
      
      - name: Publish articles
        if: ${{ github.event.inputs.run_all_steps == 'true' || github.event.inputs.run_publishing == 'true' || github.event_name == 'schedule' }}
        run: python -m scripts.daily_coordinator --publish-articles
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FIREBASE_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
          WP_URL: ${{ secrets.WP_URL }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: processing-logs-${{ github.run_id }}
          path: logs/
          retention-days: 7

  cleanup_expired_articles:
    runs-on: ubuntu-latest
    needs: process_data
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create necessary directories
        run: |
          mkdir -p /home/runner/football-predictions/creds/
          mkdir -p logs
      
      - name: Setup Firebase credentials
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > /home/runner/football-predictions/creds/firebase-credentials.json
          echo "FIREBASE_CREDENTIALS=/home/runner/football-predictions/creds/firebase-credentials.json" >> $GITHUB_ENV
          echo "GOOGLE_APPLICATION_CREDENTIALS=/home/runner/football-predictions/creds/firebase-credentials.json" >> $GITHUB_ENV
          echo "FIREBASE_DB_URL=${{ secrets.FIREBASE_DB_URL }}" >> $GITHUB_ENV
      
      - name: Clean up expired articles
        run: python -m scripts.daily_coordinator --cleanup-expired
        env:
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FIREBASE_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/football-predictions/creds/firebase-credentials.json
          WP_URL: ${{ secrets.WP_URL }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cleanup-logs-${{ github.run_id }}
          path: logs/
          retention-days: 7
